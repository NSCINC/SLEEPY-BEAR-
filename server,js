const express = require('express');
const bodyParser = require('body-parser');
const sqlite3 = require('sqlite3').verbose();
const app = express();
const PORT = 3000;

app.use(bodyParser.json());
app.use(express.static('public'));

// Connect to SQLite database
const db = new sqlite3.Database(':memory:');

db.serialize(() => {
    db.run("CREATE TABLE users (phone TEXT PRIMARY KEY, username TEXT, email TEXT, password TEXT)");
});

// Endpoint to send verification code
app.post('/send-code', (req, res) => {
    const { phone } = req.body;

    // Simulate sending code (In a real app, you'd send a real code via SMS)
    console.log(`Sending verification code to phone: ${phone}`);

    // For simplicity, let's assume the code is always "123456"
    userData[phone] = { code: "123456" };

    res.json({ success: true });
});

// Endpoint to verify code
app.post('/verify-code', (req, res) => {
    const { phone, code } = req.body;

    if (userData[phone] && userData[phone].code === code) {
        res.json({ success: true });
    } else {
        res.json({ success: false });
    }
});

// Endpoint to register user
app.post('/register', (req, res) => {
    const { phone, username, email, password } = req.body;

    const stmt = db.prepare("INSERT INTO users (phone, username, email, password) VALUES (?, ?, ?, ?)");
    stmt.run(phone, username, email, password, (err) => {
        if (err) {
            return res.status(500).json({ error: "User already exists or other error." });
        }
        res.status(200).json({ success: true, message: "User registered successfully." });
    });
    stmt.finalize();
});

app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});
